/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./style.css":
/*!*********************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./style.css ***!
  \*********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#parent {\\n    display: flex;\\n  }\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://test-bundle/./style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://test-bundle/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./16SData2.csv":
/*!**********************!*\
  !*** ./16SData2.csv ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = [[\"#Template\",\"Score\",\"Expected\",\"Template_length\",\"Template_Identity\",\"Template_Coverage\",\"Query_Identity\",\"Query_Coverage\",\"Depth\",\"q_value\",\"p_value\"],[\"Bacteria;Actinobacteriota;Actinobacteria;Micrococcales;Microbacteriaceae;Microbacterium;Microbacterium_neimengense\",2002,13,1481,17.02,100,17.02,100,1.36,1963.33,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Chromatiales;Chromatiaceae;Achromatium;Achromatium_oxaliferum\",1282,13,1508,6.5,100,6.5,100,0.93,1242.82,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;bacterium_G_02\",977,13,1512,6.81,100,6.81,100,0.68,937.88,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._V1(2012)\",1664,13,1485,7,100,7,100,1.12,1625.29,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",2274355,8,1522,69.32,100,69.32,100,1497.1,2274328.85,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_marginalis\",947,13,1497,6.61,100,6.61,100,0.67,908.28,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_beijerinckii\",27031,12,1374,26.86,100,26.86,100,19.78,26994.97,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_bouvetii\",73795,12,1440,19.44,100,19.44,100,51.4,73757.5,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._RJ08\",9504,11,1347,7.72,100,7.72,100,7.09,9468.62,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Burkholderia-Caballeronia-Paraburkholderia;Burkholderia_cenocepacia\",2178,13,1499,6.6,100,6.6,100,1.45,2138.83,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Nitrincolaceae;Marinobacterium;Marinobacterium_sp._FS10-2\",1519,13,1483,6.68,100,6.68,100,1.09,1480.38,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",960,13,1522,9.92,100,9.92,100,0.66,920.64,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Burkholderia-Caballeronia-Paraburkholderia;Burkholderia_contaminans\",171159,12,1485,65.86,100,65.86,100,115.58,171120.9,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Rhizobiales;Beijerinckiaceae;Methylobacterium-Methylorubrum;Methylorubrum_populi\",3771,10,1200,10.58,100,10.58,100,3.15,3739.52,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_symbiont_of_Stomaphis_aphananthae\",1174,12,1399,27.52,100,27.52,100,0.89,1137.66,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._LYS-2-4\",766,13,1498,16.76,100,16.76,100,0.5,727.42,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_fluorescens\",729,12,1440,10.42,100,10.42,100,0.53,691.93,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._CIP_A162\",3416,13,1506,26.69,100,26.69,100,2.34,3376.55,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._GIST-Out1\",2901,12,1415,7.35,100,7.35,100,2.05,2863.95,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_equi\",326957,12,1514,25.23,100,25.23,100,217.33,326919.11,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_sp._Bca55\",3488,12,1438,7.23,100,7.23,100,2.45,3450.31,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_variabilis\",1070,13,1519,6.52,100,6.52,100,0.8,1030.64,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_fluorescens\",1161877,10,1502,67.78,100,67.78,100,775.63,1161844.46,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_syringae\",1880,12,1479,17.99,100,17.99,100,1.45,1841.4,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;bacterium_28S512\",3423,12,1431,26.55,100,26.55,100,2.46,3385.5,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Enterobacter;Enterobacter_siamensis\",1165,12,1429,7.21,100,7.21,100,0.87,1127.89,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_sp.\",995,12,1456,7.14,100,7.14,100,0.71,957.29,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_marine_bacterium\",3013,12,1469,17.15,100,17.15,100,2.05,2974.53,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Burkholderia-Caballeronia-Paraburkholderia;Paraburkholderia_dipogonis\",1170,12,1462,6.84,100,6.84,100,0.83,1132.04,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae;Pseudoxanthomonas;Pseudoxanthomonas_kaohsiungensis\",6657,12,1422,18,100,18,100,4.72,6619.67,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens_SM39\",1700,13,1522,16.49,100,16.49,100,1.16,1660.33,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens_SM39\",113488,13,1522,17.21,100,17.21,100,74.91,113448.6,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Sphingomonadales;Sphingomonadaceae;Sphingobium;Sphingobium_amiense\",717,12,1414,17.54,100,17.54,100,0.53,680.59,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;uncultured_bacterium\",692,11,1365,21.47,100,21.47,100,0.55,656.86,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_rubidaea\",3729,11,1347,7.72,100,7.72,100,2.78,3693.68,1e-26],[\"Bacteria;Firmicutes;Bacilli;Staphylococcales;Staphylococcaceae;Staphylococcus;Staphylococcus_caprae\",11988,13,1531,24.69,100,24.69,100,7.84,11947.8,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Ralstonia;uncultured_bacterium\",2188,12,1389,7.34,100,7.34,100,1.63,2151.69,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Sphingomonadales;Sphingomonadaceae;Sphingobium;Sphingobium_sp._YG1\",1761,12,1467,17.18,100,17.18,100,1.2,1722.73,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Sphingomonadales;Sphingomonadaceae;Sphingobium;Sphingobium_sp._YG1\",67276,12,1467,66.73,100,66.73,100,46.02,67237.76,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;uncultured;Xenorhabdus_nematophila\",1158,12,1459,24.67,100,24.67,100,0.86,1120.13,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Alteromonadaceae;Rheinheimera;Spumella_vulgaris\",1209,13,1506,6.71,100,6.71,100,0.8,1169.9,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Burkholderia_sp._CCBAU_23014\",5642,13,1500,6.87,100,6.87,100,3.87,5602.64,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii\",1163950,10,1518,69.3,100,69.3,100,768.22,1163917.13,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Rhodobacterales;Rhodobacteraceae;Paracoccus;uncultured_bacterium\",1235,11,1294,7.96,100,7.96,100,0.95,1201.33,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._TGL-Y2\",3262,13,1518,10.08,100,10.08,100,2.15,3222.24,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._Hop10\",1356,13,1502,6.52,100,6.52,100,0.92,1316.94,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Teleogryllus_commodus\",975,13,1500,16.67,100,16.67,100,0.67,936.19,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",2530,13,1498,32.44,100,32.44,100,1.85,2490.82,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens_subsp._marcescens_Db11\",2743,13,1522,16.56,100,16.56,100,1.82,2703.18,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",7158,13,1501,10.13,100,10.13,100,4.86,7118.59,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Micrococcales;Micrococcaceae;Micrococcus;Micrococcus_sp.\",13453,10,1244,39.39,100,39.39,100,10.81,13420.33,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;Aureobasidium_melanogenum\",1047,11,1335,7.87,100,7.87,100,0.79,1012.35,1e-26],[\"Bacteria;Firmicutes;Clostridia;Peptostreptococcales-Tissierellales;Family_XI;Peptoniphilus;Peptoniphilus_grossensis\",3422,13,1505,6.71,100,6.71,100,2.28,3382.57,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",891,13,1521,16.96,100,16.96,100,0.67,851.72,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",705,12,1401,17.84,100,17.84,100,0.54,668.94,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_oleivorans\",1450,12,1444,10.53,100,10.53,100,1.04,1412.4,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae;Xanthomonas_citri_pv._mangiferaeindicae\",808,13,1525,6.62,100,6.62,100,0.53,768.7,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;Pseudomonas_sp._SP-2.6\",2296,10,1200,28.08,100,28.08,100,1.94,2264.59,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",826,11,1349,7.71,100,7.71,100,0.62,791.13,1e-26],[\"Bacteria;Firmicutes;Bacilli;Lactobacillales;Streptococcaceae;Streptococcus;uncultured_bacterium\",1407,13,1497,6.75,100,6.75,100,0.94,1368.05,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",58582,13,1500,17.2,100,17.2,100,39.72,58542.84,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Sphingomonadales;Sphingomonadaceae;Sphingomonas;uncultured_bacterium\",1251,12,1370,9.27,100,9.27,100,0.92,1215.37,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",833,13,1503,16.03,100,16.03,100,0.67,794.23,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_Acinetobacter_sp.\",1176,12,1400,7.29,100,7.29,100,0.89,1139.63,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_Acinetobacter_sp.\",4497,12,1399,19.94,100,19.94,100,3.24,4460.3,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Methylococcales;Methylococcaceae;uncultured;uncultured_bacterium\",3361,13,1499,6.34,100,6.34,100,2.48,3321.73,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Klebsiella;Klebsiella_pneumoniae_subsp._pneumoniae_KPNIH27\",1424,13,1520,6.38,100,6.38,100,1.06,1384.46,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",2229,13,1500,16.87,100,16.87,100,1.51,2189.8,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Rhodobacterales;Rhodobacteraceae;Paracoccus;uncultured_Paracoccus_sp.\",2266,12,1441,8.81,100,8.81,100,1.57,2228.33,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",7270,11,1363,36.17,100,36.17,100,5.36,7234.21,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;uncultured_bacterium\",980,13,1482,6.88,100,6.88,100,0.7,941.64,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Aeromonadaceae;Aeromonas;uncultured_bacterium\",34873,13,1498,10.15,100,10.15,100,24.71,34833.76,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1609,13,1498,15.82,100,15.82,100,1.18,1569.97,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",50953,13,1522,17.28,100,17.28,100,33.58,50913.23,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Corynebacteriales;Corynebacteriaceae;Corynebacterium;uncultured_bacterium\",2508,11,1342,9.99,100,9.99,100,1.87,2472.88,1e-26],[\"Bacteria;Proteobacteria;Alphaproteobacteria;Rhizobiales;Beijerinckiaceae;uncultured;uncultured_bacterium\",687,11,1305,18.77,100,18.77,100,0.57,653.37,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;uncultured_bacterium\",1791,13,1505,16.15,100,16.15,100,1.33,1751.75,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Rhodocyclaceae;Azoarcus;uncultured_bacterium\",844,13,1497,16.5,100,16.5,100,0.67,805.37,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1248,13,1499,16.01,100,16.01,100,0.99,1209.06,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",8301,11,1345,9.89,100,9.89,100,6.18,8265.67,1e-26],[\"Bacteria;Firmicutes;Bacilli;Lactobacillales;Aerococcaceae;Ignavigranum;Aerococcaceae_bacterium_ZY16052\",5311,13,1530,6.54,100,6.54,100,3.69,5270.86,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",2507,10,1227,12.06,100,12.06,100,2.26,2474.87,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Nocardioidaceae;Aeromicrobium;uncultured_bacterium\",6326,11,1337,19.37,100,19.37,100,4.74,6290.89,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",73143,12,1461,24.64,100,24.64,100,50.54,73104.95,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Enhydrobacter;uncultured_bacterium\",9542,11,1359,11.18,100,11.18,100,7.04,9506.31,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Nitrosomonadaceae;MND1;uncultured_bacterium\",4842,13,1501,6.46,100,6.46,100,3.23,4802.62,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Thiotrichales;Thiotrichaceae;uncultured;uncultured_bacterium_JM9_B4\",9670,12,1478,6.83,100,6.83,100,6.56,9631.19,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_Acinetobacter_sp.\",1440,12,1470,22.79,100,22.79,100,1.02,1401.74,1e-26],[\"Bacteria;Desulfobacterota;uncultured;uncultured_bacterium\",5695,12,1407,18.27,100,18.27,100,4.05,5658.07,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1426,13,1499,16.54,100,16.54,100,1,1387,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",3667,12,1391,17.9,100,17.9,100,2.68,3630.53,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",848,11,1344,7.89,100,7.89,100,0.63,813.24,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1165,13,1499,15.68,100,15.68,100,1,1126.1,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",2646,13,1522,9.92,100,9.92,100,1.82,2606.18,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Micrococcales;Micrococcaceae;Rothia;uncultured_bacterium\",7288,11,1331,9.92,100,9.92,100,5.49,7253.05,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_Acinetobacter_sp.\",3262,11,1284,11.92,100,11.92,100,2.55,3228.34,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Pseudocitrobacter;uncultured_bacterium\",1224,13,1506,16.67,100,16.67,100,0.83,1184.89,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Enhydrobacter;uncultured_bacterium\",6432,11,1334,7.8,100,7.8,100,4.83,6396.97,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",1505,11,1343,9.9,100,9.9,100,1.13,1469.99,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae;Stenotrophomonas;uncultured_soil_bacterium\",1468,13,1511,6.95,100,6.95,100,0.97,1428.67,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;uncultured_bacterium\",1608,11,1364,7.62,100,7.62,100,1.22,1572.43,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae;uncultured;uncultured_bacterium\",1616,13,1488,6.79,100,6.79,100,1.09,1577.22,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",44607,11,1343,46.61,100,46.61,100,33.28,44571.87,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",9104,11,1343,7.89,100,7.89,100,6.78,9068.73,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii_XBB1\",2939,13,1518,10.08,100,10.08,100,1.98,2899.26,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Comamonadaceae;Acidovorax;uncultured_bacterium\",1760,11,1289,11.79,100,11.79,100,1.37,1726.34,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;uncultured_bacterium\",725,11,1363,11.01,100,11.01,100,0.55,689.87,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Corynebacteriales;Corynebacteriaceae;Corynebacterium;uncultured_bacterium\",1039,11,1343,7.89,100,7.89,100,0.79,1004.15,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Corynebacteriales;Corynebacteriaceae;Corynebacterium;uncultured_bacterium\",1222,11,1343,18.62,100,18.62,100,0.93,1187.07,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii_XBB1\",17393,13,1518,18.38,100,18.38,100,11.6,17353.15,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",18375,13,1498,16.89,100,16.89,100,12.43,18335.68,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Enhydrobacter;uncultured_bacterium\",2003,11,1356,11.21,100,11.21,100,1.49,1967.57,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;uncultured_bacterium\",698,11,1365,26.81,100,26.81,100,0.55,662.85,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1495,11,1359,20.46,100,20.46,100,1.11,1459.58,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii_XBB1\",90480,13,1518,41.57,100,41.57,100,59.81,90440.57,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Morganellaceae;Xenorhabdus;Xenorhabdus_mauleonii\",4944,12,1480,6.96,100,6.96,100,3.51,4905.17,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Buttiauxella;unidentified_marine_bacterioplankton\",3620,12,1387,10.81,100,10.81,100,2.72,3583.64,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Micrococcales;Micrococcaceae;Kocuria;uncultured_bacterium\",1232,11,1351,18.65,100,18.65,100,0.93,1196.86,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Corynebacteriales;Corynebacteriaceae;Corynebacterium;uncultured_bacterium\",1257,11,1346,7.8,100,7.8,100,0.93,1221.98,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Corynebacteriales;Corynebacteriaceae;Corynebacterium;uncultured_bacterium\",994,11,1365,18.39,100,18.39,100,0.74,958.61,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",1390,13,1499,32.96,100,32.96,100,1.01,1351.01,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;metagenome\",823,13,1518,6.85,100,6.85,100,0.55,783.86,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_gamma_proteobacterium\",803,13,1498,9.75,100,9.75,100,0.58,764.38,1e-26],[\"Bacteria;Fusobacteriota;Fusobacteriia;Fusobacteriales;Leptotrichiaceae;Leptotrichia;uncultured_bacterium\",3517,11,1351,9.62,100,9.62,100,2.61,3481.58,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",4080,13,1502,39.01,100,39.01,100,2.9,4040.62,1e-26],[\"Bacteria;Firmicutes;Bacilli;Staphylococcales;Staphylococcaceae;Staphylococcus;Staphylococcus_epidermidis\",4636,11,1320,7.65,100,7.65,100,3.52,4601.36,1e-26],[\"Bacteria;Myxococcota;Polyangia;Polyangiales;Polyangiaceae;Pajaroellobacter;metagenome\",832,11,1281,8.2,100,8.2,100,0.65,798.85,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;pItb-vmat-80;uncultured_bacterium\",1722,13,1498,6.61,100,6.61,100,1.39,1682.94,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Limnobacter;uncultured_bacterium\",1629,13,1484,6.94,100,6.94,100,1.11,1590.32,1e-26],[\"Bacteria;Actinobacteriota;Actinobacteria;Propionibacteriales;Propionibacteriaceae;Cutibacterium;uncultured_bacterium\",4438,11,1350,17.48,100,17.48,100,3.3,4402.58,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",27086,13,1522,16.69,100,16.69,100,17.87,27046.09,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii\",148219,11,1390,18.56,100,18.56,100,107.11,148183.21,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",4535,12,1439,10.28,100,10.28,100,3.49,4497.25,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;metagenome\",50993,13,1518,32.67,100,32.67,100,36.76,50953.33,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_johnsonii_CIP_64.6\",68187,13,1518,17.39,100,17.39,100,45.2,68147.43,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;uncultured_bacterium\",962,11,1258,31.8,100,31.8,100,0.8,929.36,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;metagenome\",1113,13,1518,31.88,100,31.88,100,0.83,1073.64,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Yersiniaceae;Serratia;Serratia_marcescens\",923,13,1522,9.99,100,9.99,100,0.65,883.67,1e-26],[\"Bacteria;Firmicutes;Clostridia;Peptostreptococcales-Tissierellales;Peptostreptococcaceae;Peptostreptococcus;uncultured_bacterium\",4267,11,1287,9.87,100,9.87,100,3.32,4233.23,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Moraxellaceae;Acinetobacter;Acinetobacter_sp._CIP_102143\",970,13,1517,10.02,100,10.02,100,0.66,930.76,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas;uncultured_gamma_proteobacterium\",8953,13,1507,6.5,100,6.5,100,5.98,8913.43,1e-26],[\"Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Comamonadaceae;Aquabacterium;uncultured_bacterium\",8080,13,1483,6.88,100,6.88,100,5.45,8041.06,1e-26]]\n\n//# sourceURL=webpack://test-bundle/./16SData2.csv?");

/***/ }),

/***/ "./style.css":
/*!*******************!*\
  !*** ./style.css ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!./node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://test-bundle/./style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://test-bundle/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/circle-packing-legend.js":
/*!**************************************!*\
  !*** ./src/circle-packing-legend.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"circlePackingLegend\": () => (/* binding */ circlePackingLegend)\n/* harmony export */ });\nconst circlePackingLegend = (legend_svg,props)=>{\n    const {data} = props\n    const width = 400\n    //select all existing group elements for the navbar and bind the data to it.\n    const g = legend_svg.selectAll(\"#legend\").data([data])\n\n    //create enter selection and add group elements.\n    const gEnter = g.enter().append('g')\n        .attr('id','legend')\n\n    //Merge selection that transform the groups.\n    gEnter.merge(g)\n    \n    //Exit selection that removes old elements.\n    g.exit().remove();\n\n\n    // Create the polygons needed to show the sunburst.\n    gEnter.append(\"rect\")\n    .merge(g.select(\"rect\"))\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', (d)=>{\n            if(d.data != undefined){\n                return width;\n            }\n            \n        })\n        .attr('height', 1000)\n        .attr('stroke','black')\n        .style(\"stroke-width\", 5)\n        .attr('fill', 'rgb(163, 245, 207)')\n\n    //Exit selection that removes old polygon elements.\n    g.exit().selectAll('rect').remove();\n\n    gEnter.append(\"text\")\n    .merge(g.select(\"text\"))\n    .attr(\"x\", width/2)\n    .attr(\"y\", 50)\n    .attr(\"dy\", \".5 em\")\n    .attr(\"text-align\",\"left\")\n    .text((d)=>{\n        if(d.data != undefined){\n            return'Legend'\n        }\n        })\n    //Exit selection that removes old polygon elements.\n    g.exit().selectAll(\"text\").remove();\n\n\n    // Create the polygons needed to show the sunburst.\n    gEnter.append(\"line\")\n    .merge(g.select(\"line\"))\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", 5)\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 100)\n        .attr(\"x2\", (d)=>{\n            if(d.data != undefined){\n                return 400;\n            }\n        })\n        .attr(\"y2\", 100); \n    //Exit selection that removes old polygon elements.\n    g.exit().selectAll(\"line\").remove();\n        \n    let legendData;\n    if(data.children == undefined){\n        if(data.length == 0){\n           legendData = []\n        } else{\n           \n            legendData = Object.keys(data.data).map(function (key) {\n                return { [key]: data['data'][key] };\n            });\n            // console.log(ary2D)\n            // legendData = Object.values(data.data)\n        }\n        \n    } else{\n        legendData = [{'name':data.data.name},{'value':data.value}]\n    }\n    //select all existing group elements for the navbar and bind the data to it.\n    const datag = legend_svg.selectAll(\"#data\").data([null])\n\n    //create enter selection and add group elements.\n    const datagEnter = datag.enter().append('g')\n        .attr('id','data')\n    //Merge selection that transform the groups.\n    datagEnter.merge(datag)\n        \n    //Exit selection that removes old elements.\n    datag.exit().remove();\n\n\n    const legendText = legend_svg.select('#data').selectAll(\"text\").data(legendData)  \n    \n    const legendTextEnter = legendText.enter().append('text')\n\n    legendTextEnter.merge(legendText)\n        .attr(\"x\", width/20)\n        .attr(\"y\", (d,i) => {\n               if(d != undefined){\n                return 150+  i * 50\n            }\n            })\n        .text((d)=>{    \n            return Object.keys(d)[0] + \": \"+ Object.values(d)[0]})\n\n    legendText.exit().remove();\n\n} \n\n//# sourceURL=webpack://test-bundle/./src/circle-packing-legend.js?");

/***/ }),

/***/ "./src/circle-packing.js":
/*!*******************************!*\
  !*** ./src/circle-packing.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"writeDownloadLink\": () => (/* binding */ writeDownloadLink),\n/* harmony export */   \"drawCirclePacking\": () => (/* binding */ drawCirclePacking)\n/* harmony export */ });\n/* harmony import */ var _src_circle_packing_legend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../src/circle-packing-legend.js */ \"./src/circle-packing-legend.js\");\n\n/**\n * The function writeDownloadLink selects an svg and exports it.\n */\n const writeDownloadLink = (svgID,chartName) => {svgExport.downloadSvg(document.querySelector(`#${svgID}`), chartName)}\n\n /**\n * The function buildHierarchy is a helper function that transfroms a CSV file into hierarchical format.\n * @param {*} csv A String containing the CSV file\n * @returns An Object containing the hierarchical data.\n */\n  const buildHierarchy = (csv,value) => {\n    // Helper function that transforms the given CSV into a hierarchical format.\n    const root = { name: \"root\", children: [] };\n    for (let i = 0; i < csv.length; i++) {\n      const sequence = csv[i][0];\n      let size = +csv[i][1];\n      if(String(size)){\n        size = size * 10000000000000000000000000000\n      }\n      const previousLayer = csv[i][2]\n      if (isNaN(size)) {\n        // e.g. if this is a header row\n        continue;\n      }\n      const parts = sequence.split(\";\");\n      let currentNode = root;\n      for (let j = 0; j < parts.length; j++) {\n        const children = currentNode[\"children\"];\n        const nodeName = parts[j];\n        let childNode = null;\n        if (j + 1 < parts.length) {\n          // Not yet at the end of the sequence; move down the tree.\n          let foundChild = false;\n          for (let k = 0; k < children.length; k++) {\n            if (children[k][\"name\"] == nodeName) {\n              childNode = children[k];\n              foundChild = true;\n              break;\n            }\n          }\n          // If we don't already have a child node for this branch, create it.\n          if (!foundChild) {\n            childNode = { name: nodeName, children: []};\n            children.push(childNode);\n          }\n          currentNode = childNode;\n        } else {\n          // Reached the end of the sequence; create a leaf node.\n          if(previousLayer != undefined){\n            childNode = { name: nodeName, value: size, previousLayer:previousLayer };\n          } else{\n            childNode = { name: nodeName, value: size};\n          }\n          \n          let exists = {status:false};\n          children.forEach((element,index)=> {\n              if(element.name == childNode.name){\n                  exists.status = true\n                  exists.value = element.value\n                  exists.index = index\n                }              \n          });\n\n\n          if(!exists.status){\n            children.push(childNode);\n          } else{\n            childNode.value = childNode.value + exists.value\n            children[exists.index] = childNode\n          }\n        }\n      }\n    }\n\n    return root;\n  }\n\n\n  /**\n   * The function filterData filters the incomming data and only returns the layer that is given as an input.\n   * @param {*} props An Object containing the csv data and the selected layer.\n   * @returns An Object that contains the filterd data and the information needed to determine pervious layers.\n   */\n  const filterData = (props) => {\n    const {csv,layer} = props\n    const previousLayerObject = {}\n\n    const layerData = csv.filter(element => {\n      const layers = element[0].split(';')\n      return layers[layer] != undefined\n\n     }).map((element)=>{\n      if(element[0] != '#Template'){\n        const layers = element[0].split(';')\n        if (layers[layer-1] != undefined){\n          if(previousLayerObject[layers[layer]] == undefined){\n            previousLayerObject[layers[layer]] = layers[layer-1]\n            \n          }\n        }\n        return [layers[layer],element[1]]\n      } else{\n        return element\n      }\n\n    })\n  \n    const filterdData = []\n    layerData.forEach((e)=>{\n      if(e[0] != '#Template'){\n        const newValue = e\n        newValue.push(previousLayerObject[e[0]])\n        filterdData.push(newValue)\n      } else{\n\n      const newHeaders = e\n      newHeaders.push('PreviousLayer')\n      filterdData.push(newHeaders)\n     }\n     })\n    return {filterdData,previousLayerObject}\n\n  }\n\n  /**\n   * The function getLastLayer Collects the last layer of the phylogeny.\n   * @param {*} props An Object containing that contains the csv data needed to get the last layer \n   * @returns A Number containg the last layer of the phylogeny.\n   */\n  const getLastLayer = (props) =>{\n\n    const {csv} = props\n    let lastLayer = 0;\n\n    csv.forEach((element)=>{\n      const layers = element[0].split(';')\n      if(layers.length > lastLayer){\n        lastLayer = layers.length\n      }\n\n    })\n    return lastLayer\n  }\n\n  /**\n   * The function fillSelectionBox adds all possible layers to the selection box.\n   * @param {*} props An Object containing the index of the last layer.\n   * @returns -\n   */\n  const FillSelectionBox = (props) =>{\n    const {lastLayer} = props\n    let select = document.getElementById(\"layer-select\");\n    select.options[select.options.length] = new Option('All', 0)\n    for (let i = 0; i < lastLayer; i++){\n      select.options[select.options.length] = new Option(i+1, i+1);\n    }\n\n  }\n\n  /**\n * The function pareCsvData converts the data from a CSV file to a hierarchical format needed for the graph.\n * @param {*} props An Object containg all data needed to parse the csv file. \n * @returns An Object containg the parsed data.\n */\nconst parseCsvData = (props)=>{\n    const {csvData,layer,checkbox,value} = props\n    \n\n    \n    let csv = d3.csvParseRows(csvData)\n    let data;\n    const lastLayer = getLastLayer({csv})\n\n    if(checkbox){\n      FillSelectionBox({lastLayer}) \n    }\n    if(layer != null){\n      const {filterdData,previousLayerObject} = filterData({csv,layer})\n      data = buildHierarchy(filterdData,value)\n      return {data,previousLayerObject}\n    } else{\n      data = buildHierarchy(csv,value)\n      return {data}\n    }\n    \n  }\n\n/**\n *The function createColorScale creates an colorScale.\n * @param {*} domain an array containing all values that are used for the domain.\n * @param {*} range an array containing the range that are used for the range. \n * @returns an funcion that functions as an colorscale.\n */\nconst createColorScale = (domain,range)=>d3.scaleOrdinal().domain(domain.sort()).range(range)\n\n/**\n * The function drawCirclePacking generates the circle packing visualization based on given data.\n * @param {*} props An Object containing the csv data, svg, legend svg, selected layer, \n * A boolean that describes if the checkbox has to be filled and the value that has to be used for the graph.\n * @returns -\n */\nfunction drawCirclePacking(props){\n\n  const {csvData,svg,legend_svg,layer,checkbox,value} = props\n  const {data,previousLayerObject} = parseCsvData({csvData,layer,checkbox,value})\n  let previousLayerColor;\n  if(previousLayerObject != undefined){\n    const color_scale = chroma.scale(['00429d', '06449e', '0d469f', '1247a0', '1649a0', '1a4ba1', '1d4da2', '204fa3', '2351a4', '2653a5', '2854a6', '2b56a7', '2d58a7', '2f5aa8', '315ca9', '345eaa', '3660ab', '3862ac', '3a64ad', '3c66ad', '3e67ae', '4069af', '426bb0', '436db1', '456fb2', '4771b2', '4973b3', '4b75b4', '4d77b5', '4e79b6', '507bb7', '527db7', '547fb8', '5581b9', '5783ba', '5985bb', '5b87bb', '5c89bc', '5e8bbd', '608dbe', '618fbf', '6390bf', '6593c0', '6794c1', '6896c2', '6a98c2', '6c9ac3', '6e9cc4', '6f9ec5', '71a0c6', '73a2c6', '75a4c7', '77a6c8', '78a8c9', '7aabc9', '7cadca', '7eafcb', '80b1cc', '82b3cc', '83b5cd', '85b7ce', '87b9ce', '89bbcf', '8bbdd0', '8dbfd1', '8fc1d1', '91c3d2', '93c5d3', '95c7d3', '97c9d4', '9acbd5', '9ccdd5', '9ecfd6', 'a0d1d7', 'a2d3d7', 'a5d5d8', 'a7d7d8', 'a9d9d9', 'acdbda', 'aeddda', 'b1dfdb', 'b3e0db', 'b6e2dc', 'b8e4dc', 'bbe6dd', 'bee8dd', 'c1eade', 'c4ecde', 'c7eedf', 'caf0df', 'cdf1e0', 'd1f3e0', 'd4f5e0', 'd8f7e1', 'dcf8e1', 'e0fae1', 'e5fbe1', 'eafde1', 'f0fee1', 'f6ffe1', 'fffcde', 'fffadc', 'fff7da', 'fff5d8', 'fff2d6', 'ffefd4', 'ffedd2', 'ffead0', 'ffe8ce', 'ffe5cc', 'ffe2ca', 'ffe0c8', 'ffddc6', 'ffdac4', 'ffd8c2', 'ffd5c0', 'ffd2be', 'ffd0bc', 'ffcdbb', 'ffcab9', 'ffc8b7', 'ffc5b5', 'ffc2b3', 'ffbfb1', 'ffbcaf', 'ffbaad', 'ffb7ab', 'ffb4a9', 'ffb1a7', 'ffaea5', 'ffaca3', 'ffa9a1', 'ffa69f', 'ffa39d', 'ffa09a', 'ff9d98', 'ff9a96', 'fe9794', 'fe9493', 'fd9291', 'fc8f8f', 'fb8c8d', 'fb8a8c', 'fa878a', 'f98588', 'f88286', 'f77f85', 'f67d83', 'f57a81', 'f4777f', 'f3757e', 'f2727c', 'f06f7a', 'ef6d79', 'ee6a77', 'ed6875', 'eb6574', 'ea6272', 'e96071', 'e75d6f', 'e65b6d', 'e5586c', 'e3556a', 'e25369', 'e05067', 'df4e66', 'dd4b64', 'db4863', 'da4661', 'd84360', 'd6415e', 'd43e5d', 'd33c5b', 'd1395a', 'cf3759', 'cd3457', 'cb3156', 'c92f54', 'c72c53', 'c52a52', 'c32750', 'c1254f', 'bf224e', 'bc1f4c', 'ba1d4b', 'b81a4a', 'b61849', 'b31547', 'b11246', 'ae1045', 'ac0d44', 'a90a43', 'a70842', 'a40640', 'a1043f', '9e023e', '9c013d', '99013c', '96003b', '93003a'])\n    const uniqueElements = Object.values(previousLayerObject)\n    previousLayerColor = createColorScale(uniqueElements,color_scale.colors(Object.values(previousLayerObject).length))\n  }\n  // Define constants    \n  const width = 932\n  const height = 932\n     \n  // Creating data packing function \n  const pack = data => d3.pack()\n  .size([width, height])\n  .padding(3)(d3.hierarchy(data)\n  .sum(d => d.value)\n  .sort((a, b) => b.value - a.value))\n\n  // Calculate packing data\n  const root = pack(data);\n  let focus = root;\n  let view;\n\n  // Calculate color scale\n  const color = d3.scaleLinear()\n  .domain([0, root.height])\n  .range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"])\n  .interpolate(d3.interpolateHcl)\n\n  svg\n    .attr(\"width\", 1000)\n    .attr(\"height\", 1000)\n    // .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n    .style(\"display\", \"block\")\n    .style(\"margin\", \"0 -14px\")\n    .style(\"background\", color(0))\n    .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => zoom(event, root))\n\n  // Create a data binding that adds a single element.\n  const circlePackingg = svg.selectAll('#container').data([null]);\n\n  // create an enter selection taht adds a group element.\n  const circlePackinggEnter = circlePackingg\n    .enter().append('g')\n      .attr('id', 'container');\n\n  // Create a merge selection for the group element.\n  circlePackinggEnter\n    .merge(circlePackingg)\n\n  // Create an exit selection that removes old elements.\n  circlePackinggEnter.exit().selectAll('#container').remove();\n  \n  //select all existing cirlce elements and bind the data to it.\n  const circlePackingSelection = svg.select('#container').selectAll(\"circle\").data(root.descendants().slice(1),(data)=> data.r)\n\n  //create enter selection and add circle elements.\n  const circlePackingEnter = circlePackingSelection.enter().append('circle')\n\n  //Merge selection that sets attributes of cirlcle.\n  circlePackingEnter.merge(circlePackingSelection)\n    .attr(\"fill\", d => {\n      if(d.data.previousLayer !=  undefined){\n        return previousLayerColor(d.data.previousLayer)\n      }\n      return d.children ? color(d.depth) : \"white\"\n  \n  })\n    .on(\"mouseover\", function(event,d) {\n      const data = d\n      ;(0,_src_circle_packing_legend_js__WEBPACK_IMPORTED_MODULE_0__.circlePackingLegend)(legend_svg,{data})\n      d3.select(this).attr(\"stroke\", \"#000\"); \n    })\n    .on(\"mouseout\", function() { \n      const data = []\n      d3.select(this).attr(\"stroke\", null)\n      ;(0,_src_circle_packing_legend_js__WEBPACK_IMPORTED_MODULE_0__.circlePackingLegend)(legend_svg,{data})\n    })\n    .on(\"click\", (event, d) => {\n      !d.children ? \"none\" : focus !== d && (zoom(event, d), event.stopPropagation())\n      });\n\n  //Exit selection that removes old elements.\n  circlePackingSelection.exit().remove();\n\n  // Create a data binding that ads a single element.\n  const labelg = svg.selectAll('#label').data([null]);\n\n  // Create enter selection and add group element with and ID.\n  const labelgEnter = labelg\n    .enter().append('g')\n      .attr('id', 'label');\n\n  // Create merge selection and add all attributes.\n  labelgEnter\n    .merge(labelg)\n      .style(\"font\", \"10px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n\n    //select all existing text elements and bind the data to it.\n    const labelSelection = svg.select('#label').selectAll(\"text\").data(root.descendants())\n\n    //create enter selection and add text elements.\n    const labelEnter = labelSelection.enter().append('text')\n      .merge(labelSelection)\n      .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n      .style(\"display\", d => d.parent === root ? \"inline\" : \"none\")\n      .text(d => {\n        if(d.value > 100){\n          return d.data.name\n        }\n        });\n\n    // Create exit selection and remove not needed elements\n    labelSelection.exit().remove()\n\n \n   // Creating the start zoom the get the right starting overview.\n   zoomTo([root.x, root.y, root.r * 2]);\n     \n   /**\n    * The function zoomTo handels the shown positions for the cirlces and nodes aswell as the r of the circle\n    * @param {*} v \n    */\n   function zoomTo(v) {\n     const k = width / v[2];\n     view = v;\n     \n     labelEnter.attr(\"transform\", d => `translate(${(d.x - v[0]) * k + 500},${(d.y - v[1]) * k + 500})`);\n     circlePackingEnter.attr(\"transform\", d => `translate(${(d.x - v[0]) * k + 500},${(d.y - v[1]) * k+ 500})`);\n     circlePackingEnter.attr(\"r\", d => {\n      return d.r * k});\n   }\n   \n   /**\n    * The function zoom handles the circle transition and label filtering.\n    * @param {*} event \n    * @param {*} d \n    */\n   function zoom(event, d) {    \n     focus = d;\n     \n     const transition = svg.transition()\n       .duration(event.altKey ? 7500 : 750)\n       .tween(\"zoom\", d => {\n         const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n         return t => zoomTo(i(t));\n       });\n     \n     labelEnter\n     .filter(function(d) { return d.parent === focus || this.style.display === \"inline\"; })\n     .transition(transition)\n     .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n       .on(\"start\", function(d) { if (d.parent === focus) this.style.display = \"inline\"; })\n       .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n   }\n }\n \n   \n\n//# sourceURL=webpack://test-bundle/./src/circle-packing.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../style.css */ \"./style.css\");\n/* harmony import */ var _src_circle_packing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../src/circle-packing.js */ \"./src/circle-packing.js\");\n/* harmony import */ var _16SData2_csv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../16SData2.csv */ \"./16SData2.csv\");\n/* harmony import */ var _16SData2_csv__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_16SData2_csv__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst fillDataValueSelectionBox = (valueOptions,value) =>{\n  let select = document.getElementById(\"value-select\");\n  select.options[select.options.length] = new Option(value, value)\n  for (let i = 0; i < valueOptions.length; i++){\n    if(valueOptions[i] != value){\n      select.options[select.options.length] = new Option(valueOptions[i],valueOptions[i]);\n    }\n    \n  }\n\n}\n\n\n\nlet csvData\n\nconst svg = d3.select(\"svg#circle-packing\")\n.attr('flex',1)\n\nconst legend_svg = d3.select(\"svg#circle-packing-legend\")\n.attr('width',400)\n.attr('background','lightblue')\n\n\n\nlet value = \"Depth\"\nfillDataValueSelectionBox(_16SData2_csv__WEBPACK_IMPORTED_MODULE_2___default()[0].slice(1),value)\n\n\nconst render = (layer,svg,legend_svg,csvData,checkbox,value) =>{\n\n  let valueIndex;\n\n  _16SData2_csv__WEBPACK_IMPORTED_MODULE_2___default()[0].forEach((element,index) => {\n    if(element == value){\n      valueIndex = index\n    }\n  })\n  const parsedData  = _16SData2_csv__WEBPACK_IMPORTED_MODULE_2___default().map((element) => {\n    return [element[0],element[valueIndex]]\n  })  \n  csvData = Papa.unparse(parsedData);\n\n  d3.select(\"#download\").on(\"click\", ()=>(0,_src_circle_packing_js__WEBPACK_IMPORTED_MODULE_1__.writeDownloadLink)('circle-packing','circlePacking'));\n  (0,_src_circle_packing_js__WEBPACK_IMPORTED_MODULE_1__.drawCirclePacking)({csvData,svg,layer,checkbox,legend_svg,value})\n}\n\nrender(null,svg,legend_svg,csvData,true,value);\n\n\ndocument.getElementById('layer-select').onchange = (e)=>{\n  if((Number(document.getElementById(\"layer-select\").value)) == 0){\n    render(null,svg,legend_svg,csvData,false,document.getElementById(\"value-select\").value);\n  } else{\n    render(Number(document.getElementById(\"layer-select\").value)-1,svg,legend_svg,csvData,false,document.getElementById(\"value-select\").value)\n  }\n\n}\n\n\ndocument.getElementById('value-select').onchange = (e)=>{\n  if((Number(document.getElementById(\"layer-select\").value)) == 0){\n    render(null,svg,legend_svg,csvData,false,document.getElementById(\"value-select\").value)\n\n  } else{\n    render(Number(document.getElementById(\"layer-select\").value)-1,svg,legend_svg,csvData,false,document.getElementById(\"value-select\").value)\n\n  }\n}\n\n\n//# sourceURL=webpack://test-bundle/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;